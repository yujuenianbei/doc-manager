import{_ as l,o as i,c as e,e as a}from"./app-CBkFLGo6.js";const n={},o=a('<h1 id="软件项目管理" tabindex="-1"><a class="header-anchor" href="#软件项目管理"><span>软件项目管理</span></a></h1><p>软件项目成功绿非常低的圆心可能就是项目管理能力太弱。</p><p>定义：指软件生存周期中软件管理者岁进行的一系列活动，其目的是在一定时间和预设范围内有效地利用人力、资源、技术和工具，使软件系统或软件产品按原定计划和质量要求如期完成。</p><h2 id="软件项目管理涉及的范围" tabindex="-1"><a class="header-anchor" href="#软件项目管理涉及的范围"><span>软件项目管理涉及的范围</span></a></h2><ol><li>人员（person）</li><li>产品（product）</li><li>过程（process）</li><li>项目（project）</li></ol><h3 id="人员" tabindex="-1"><a class="header-anchor" href="#人员"><span>人员</span></a></h3><ol><li>项目管理人员：负责人为项目经理。除了开发技术外，也要具备管理人员应有的技能。</li><li>高级管理人员：一般为领域专家，负责提出项目的目标并对业务问题进行定义，这类业务问题经常会对项目产生较大的影响。</li><li>开发人员：通常为掌握了开发所需的专门技术，可胜任需求分析、设计、编码、测试、发布等相关的开发岗位。</li><li>客户： 可说明待开发软件需求的人，也包括与项目目标有关的其他风险承担者。</li><li>最终用户：产品提交后，与产品进行交互的人。</li></ol><p>软件项目的组织称为软件项目组，每个软件项目组都有上述的人员参与，项目组的组织必须最大限度地发挥每个人的额技术和能力</p><h3 id="产品" tabindex="-1"><a class="header-anchor" href="#产品"><span>产品</span></a></h3><p>进行项目计划前要进行项目定义，即定义项目范围。其中包括建立产品的目的和范围、可选的解决方案、技术活管理的约束等</p><h3 id="过程" tabindex="-1"><a class="header-anchor" href="#过程"><span>过程</span></a></h3><p>根据选定的过程模型来制订一个初步的项目计划，必须要制订一个完整的计划来反映框架活动中所需完成的工作任务。</p><h3 id="项目" tabindex="-1"><a class="header-anchor" href="#项目"><span>项目</span></a></h3><p>方法：</p><ol><li>明确目标及过程（明确范围，发挥主观能动性）</li><li>保持动力</li><li>跟踪进度</li><li>做出明智的决策（采用成熟标准的构件或模式，避免出现风险）</li><li>进行事后分析</li></ol><h2 id="软件项目估算" tabindex="-1"><a class="header-anchor" href="#软件项目估算"><span>软件项目估算</span></a></h2><p>估算方法：</p><ol><li>基于已经完成的类似项目进行估算</li><li>基于分解技术进行估算（问题分解和过程分解，问题分解：复杂问题进行拆分。过程分解：开发过程中的活动进行估算（分析，设计，编码，测试））</li><li>基于经验估算模型的估算（IBM估算模型，CoCoMo模型，Putnam模型）</li></ol><h3 id="成本估算方法" tabindex="-1"><a class="header-anchor" href="#成本估算方法"><span>成本估算方法</span></a></h3><ol><li><p>自顶向下估算方法（参照以前完成的项目所消耗的总成本来推算将要开发的软件的总成本，然后把他们按阶段、步骤和工作单元进行分配）</p><p>优点：对系统级的工作重视。</p><p>缺点：往往不清楚低级别上的技术性困难问题，而使成本上升。</p></li><li><p>自底向上估算方法（将待开发的软件进行细分，估算每个子任务的工作量，然后进行相加）</p><p>优点：将每一部分的估算工作交给负责的人员进行评估，估算较为准确。</p><p>缺点：缺少了子任务之间相互联系所需要的工作量和系统级的工作量，估算往往偏低。</p></li><li><p>差别估算方法（找出待开发项目与已完成的类似项目进行比较找出不同之处，估算每个不同之处对成本的影响，而得出总成本）</p><p>优点：可提高估算的精准度</p><p>缺点：不容易明确差别的界限</p></li><li><p>其他估算方法</p><ul><li>专家估算法</li><li>类推估算法</li><li>算式估算法： 理论+经验</li></ul></li></ol><h3 id="cocomo估算模型" tabindex="-1"><a class="header-anchor" href="#cocomo估算模型"><span>COCOMO估算模型</span></a></h3><ol><li>基本COCOMO模型：静态单变量模型，对整个系统估算。可通过估算代码行的值L，计算开发工作量和开发时间的估算。</li><li>中级COCOMO模型：静态多变量模型，以COCOMO为基础，再考虑产品，人员，项目等因素来调整工作量的估算</li><li>详细COCOMO模型：将系统模型分为系统、子系统、模块3层次，包含中级COCOMO所有内容，加上软件过程中需求分析，软件设计等步骤的影响</li></ol><h3 id="cocomoii估算模型" tabindex="-1"><a class="header-anchor" href="#cocomoii估算模型"><span>COCOMOII估算模型</span></a></h3><ol><li>应用组装模型：前期阶段使用。对象点</li><li>早期设计阶段模型：需求稳定且软件体系结构已经建立时使用。功能点-代码行</li><li>体系结构阶段模型：软件构造过程中使用。</li></ol><h2 id="进度管理" tabindex="-1"><a class="header-anchor" href="#进度管理"><span>进度管理</span></a></h2><p>目的：确保软件项目在规定的时间内按期完成。</p><p>安排原则：</p><ol><li>划分（对蟾皮你和过程都要分解）</li><li>相互依赖</li><li>时间分配</li><li>工作量确认</li><li>确定责任</li><li>明确输出结果</li><li>确定里程碑</li></ol><p>进度安排</p><ol><li>各个计划开始时间和完成时间</li><li>各个任务完成标志</li><li>各个任务参与工作的人数，各个任务与工作量之间的衔接情况</li><li>完成各个任务所需的物力资源和数据资源</li></ol><p>常用图形Gantt(甘特图)，项目计划评审技术（Program Evaluation &amp; Review Technique ,PERT）</p><p>甘特图（水平条状图，以日历为基准描述项目任务）</p><p>优点：能清楚地描述每个任务从何时开始，到何时结束，任务的进展情况和各个任务之间的并行性。</p><p>缺点：不能反映出各任务之间的依赖关系，难以确定整个项目的关键所在，也不能反映计划中有潜力的部分。</p><p>PERT图（一种网络模型，描述一个项目的各个任务之间的关系）</p><p>松弛时间为0的任务是完成整个工程的关键路径</p><p>缺点： 不能反映任务之间的并行关系</p><h2 id="软件项目的组织" tabindex="-1"><a class="header-anchor" href="#软件项目的组织"><span>软件项目的组织</span></a></h2><p>组织原则：</p><ol><li>尽早落实责任。</li><li>减少交流接口。合理人员分工，有效沟通。</li><li>责权平衡。</li></ol><p>组织结构的模式</p><ol><li>按项目划分的模式</li><li>按职能划分</li><li>矩阵模式（以上两个的合并）</li></ol><h2 id="软件配置管理-software-configure-management-scm" tabindex="-1"><a class="header-anchor" href="#软件配置管理-software-configure-management-scm"><span>软件配置管理（Software Configure Management, SCM）</span></a></h2><p>主要目标：标识变更；控制变更；确保变更正确的实现；报告有关变更。SCM是一组管理整个软件生存周期中各阶段变更的活动</p><ol><li>基线</li><li>软件配置项</li><li>版本控制</li><li>变更控制</li></ol><h2 id="风险管理" tabindex="-1"><a class="header-anchor" href="#风险管理"><span>风险管理</span></a></h2><p>定义：预算、进度、人员、资源、利益相关者、需求等方面的潜在问题以及它们对软件项目的影响。</p><p>特征：不确定性、损失。</p><ol><li>不确定性：风险可能发生也可能不发生</li><li>损失：如果风险发生，就会产生恶性后果</li></ol><p>风险类型：</p><ol><li>项目风险</li><li>技术风险</li><li>商业风险</li></ol><p>风险分析的内容</p><ol><li>风险识别：试图系统化地指出对项目计划（估算、进度、资源分配等）的威胁。</li><li>风险预测：又称风险估计，它试图从两个方面评估一个风险：风险发生的可能性或概率；如果风险发生了所产生的后果。</li><li>风险评估：根据风险及其发生的概率和产生的影响预测是否影响参考水平值。</li><li>风险控制：目的是辅助项目组建立处理风险的策略。 <ul><li>风险避免</li><li>风险监控</li><li>RMMM计划：将所有风险分析工作文档化，并由项目管理者作为整个项目计划的一部分来使用。</li></ul></li></ol>',53),p=[o];function s(h,t){return i(),e("div",null,p)}const c=l(n,[["render",s],["__file","软件工程基础知识-软件项目管理.html.vue"]]),d=JSON.parse('{"path":"/software/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86.html","title":"软件项目管理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"软件项目管理涉及的范围","slug":"软件项目管理涉及的范围","link":"#软件项目管理涉及的范围","children":[{"level":3,"title":"人员","slug":"人员","link":"#人员","children":[]},{"level":3,"title":"产品","slug":"产品","link":"#产品","children":[]},{"level":3,"title":"过程","slug":"过程","link":"#过程","children":[]},{"level":3,"title":"项目","slug":"项目","link":"#项目","children":[]}]},{"level":2,"title":"软件项目估算","slug":"软件项目估算","link":"#软件项目估算","children":[{"level":3,"title":"成本估算方法","slug":"成本估算方法","link":"#成本估算方法","children":[]},{"level":3,"title":"COCOMO估算模型","slug":"cocomo估算模型","link":"#cocomo估算模型","children":[]},{"level":3,"title":"COCOMOII估算模型","slug":"cocomoii估算模型","link":"#cocomoii估算模型","children":[]}]},{"level":2,"title":"进度管理","slug":"进度管理","link":"#进度管理","children":[]},{"level":2,"title":"软件项目的组织","slug":"软件项目的组织","link":"#软件项目的组织","children":[]},{"level":2,"title":"软件配置管理（Software Configure Management, SCM）","slug":"软件配置管理-software-configure-management-scm","link":"#软件配置管理-software-configure-management-scm","children":[]},{"level":2,"title":"风险管理","slug":"风险管理","link":"#风险管理","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"software/软件工程基础知识-软件项目管理.md"}');export{c as comp,d as data};
